package com.psl.q2;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.StringTokenizer;


public class Client {
	
	
	
	
	private Map<String,ArrayList<String>> readOrder() {
		// TODO Auto-generated method stub
		ArrayList<String> arrayList =new ArrayList<String>();
		Map<String,ArrayList<String>> map=new HashMap<String,ArrayList<String>>();
		 File f=new File("order.txt");
	      try (
				FileInputStream fis=new FileInputStream(f);
				BufferedReader br=new BufferedReader(new InputStreamReader(fis));
			)
			{
	    	  String data=null;
			  while((data=br.readLine())!=null)
			  {
				  String a[]=data.split(":");
				  String key=a[0];
				  String value=a[1];
				  StringTokenizer st=new StringTokenizer(value,";");
				   while(st.hasMoreTokens())
				   {
					  
					  arrayList.add(st.nextToken());
				   }
				 
				   map.put(key,arrayList);
			  }
			 
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return map;
	}
	public static void main(String[] args) {
		
		Client c= new Client();
		
		Map<String,ArrayList<String>> map=new HashMap<String,ArrayList<String>>();
		
		int option=0;
	     DbConnect db=new DbConnect();
         Connection con=db.connectionEstabish(); 
         Statement st=null;
         ResultSet rs=null;
         BufferedReader br=null;
         
		 do {
			  
		   br=new BufferedReader(new InputStreamReader(System.in));
		   try {
			   System.out.println("\n--------Menu--------");
			   System.out.println("1. Add Person.");
			   System.out.println("2. Read orders which are placed.");
			   System.out.println("3. Search Person and generate bill");
			   System.out.println("4. exit");
			   System.out.println("Enter option :");
			    option=Integer.parseInt(br.readLine());
			    switch(option)
			    {
			    case 1:
			    	st=con.createStatement();
			    	int personid=1;
			    	rs=st.executeQuery("select max(personid) from person");
			    	if(rs.next())
			    	{
			    		personid=rs.getInt(1)+1;
			    	}
			    	System.out.println("Enter Person name:");
			    	String personName=br.readLine();
			    	System.out.println("Enter Person phone number:");
			    	long personphone=Long.parseLong(br.readLine());
			    	
			    	st.execute("insert into person values("+personid+",'"+personName+"',"+personphone+")");
			    	
			    	break;
			    case 2:
			    	 map= c.readOrder();  
			    	break;
			    case 3:
			    	
			    	  
			    	break;
			    case 4:
			    	System.exit(0);
			    	default:
			    		System.out.println("invalid option......!!!");
			    }
			
		} catch (NumberFormatException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		} while (option!=4);
		 
		 try {
			    rs.close();
		    	st.close();
				con.close();
				br.close();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	

	
}
