package com.psl;

import org.aspectj.lang.ProceedingJoinPoint;
import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.AfterReturning;
import org.aspectj.lang.annotation.AfterThrowing;
import org.aspectj.lang.annotation.Around;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.Pointcut;

@Aspect
public class Audiance {
	
	@Pointcut(value="execution(* com.psl.Performer.perform(..))")
	
	public void pc1(){	}

	@Before(value="pc1()")
	public void takeSeats(){
		System.out.println("Audiance take seats");
	}
	
	@Before(value="pc1()")
	public void switchOffPhones(){
		System.out.println("Audiance switch off phones");
	}
	
	@AfterThrowing(value="pc1()")
	public void demandRefund(){
		System.out.println("Audiance demand a refund");
	}
	
	@AfterReturning(value="pc1()")
	public void applaud()
	{
		System.out.println("Audiance claps");
	}
	
	@After(value="pc1()")
	public void goHome(){
		System.out.println("Audiance went home");
	}
	
	@Around(value = "pc1()")
	public void record(ProceedingJoinPoint jp){
		//Before
		System.out.println("Audiance take seats");
		System.out.println("Audiance switch off phones");
		System.out.println( "Audiance start camera");
		
		//during
		 try {
			jp.proceed();//Prrformer.perform();
			System.out.println("Audiance claps");
		} catch (Throwable e) {
			// TODO Auto-generated catch block
			//e.printStackTrace();
			System.out.println("Audiance demand a refund");
		}
		
		
		
		//After
		System.out.println( "Audiance stop camera");
		System.out.println("Audiance went home");
	}
}
